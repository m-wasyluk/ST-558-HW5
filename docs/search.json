[
  {
    "objectID": "h5.html",
    "href": "h5.html",
    "title": "HW5",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "h5.html#read-and-modify-data",
    "href": "h5.html#read-and-modify-data",
    "title": "HW5",
    "section": "Read and Modify Data",
    "text": "Read and Modify Data\nWe’ll start with the d1 and d2 tables from the helper code.\n\nsource(\"Data/student-merge.R\")\n\n[1] 382\n\nmat_tbl &lt;- d1\npor_tbl &lt;- d2\n\nfull_tbl_1 &lt;- inner_join(mat_tbl, por_tbl, by = c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\n\nWarning in inner_join(mat_tbl, por_tbl, by = c(\"school\", \"sex\", \"age\", \"address\", : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nWe receive an unexpected many-to-many relationship warning.\n\nfull_tbl_2 &lt;- inner_join(mat_tbl, por_tbl, by = setdiff(names(mat_tbl), c(\"G1\", \"G2\", \"G3\", \"paid\", \"absences\")))\n\ncolumns_of_interest &lt;- c(\"reason\", \"guardian\", \"activities\", \"nursery\")\n\nfull_tbl_2 &lt;- full_tbl_2 |&gt; \n  mutate(across(columns_of_interest, as.factor))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(columns_of_interest, as.factor)`.\nCaused by warning:\n! Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(columns_of_interest)\n\n  # Now:\n  data %&gt;% select(all_of(columns_of_interest))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;."
  },
  {
    "objectID": "h5.html#contingency-tables",
    "href": "h5.html#contingency-tables",
    "title": "HW5",
    "section": "Contingency Tables",
    "text": "Contingency Tables\n\ntable(full_tbl_2$reason, useNA = \"always\")\n\n\n    course       home      other reputation       &lt;NA&gt; \n       118         87         30         85          0 \n\n\nWe don’t have any missing variables here, and these counts fit neatly into the definition. For example, 85 students chose this school for reputation.\n\nsubset_tbl &lt;- full_tbl_2 |&gt; \n  filter(reason == \"reputation\")\n\ntable(subset_tbl$guardian, subset_tbl$nursery, useNA = \"always\")\n\n        \n         no yes &lt;NA&gt;\n  father  5  14    0\n  mother  8  56    0\n  other   0   2    0\n  &lt;NA&gt;    0   0    0\n\ntable(full_tbl_2$guardian, full_tbl_2$nursery, full_tbl_2$reason, useNA = \"always\")[,, \"reputation\"]\n\n        \n         no yes &lt;NA&gt;\n  father  5  14    0\n  mother  8  56    0\n  other   0   2    0\n  &lt;NA&gt;    0   0    0\n\n\nHere we see the same table produced both ways. Among those who chose the school for the reputation, 5 have the father as primary guardian and did not attend nursery school.\n\nfull_tbl_2 |&gt; \n  group_by(guardian, nursery) |&gt; \n  summarize(count = n()) |&gt; \n  pivot_wider(names_from = nursery, values_from = count)\n\n`summarise()` has grouped output by 'guardian'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 3\n# Groups:   guardian [3]\n  guardian    no   yes\n  &lt;fct&gt;    &lt;int&gt; &lt;int&gt;\n1 father      16    58\n2 mother      39   198\n3 other        4     5\n\n\nThis one looks similar following the pivot. We have 16 total students who didn’t attend nursery school with the father as the primary guardian."
  },
  {
    "objectID": "h5.html#numeric-eda",
    "href": "h5.html#numeric-eda",
    "title": "HW5",
    "section": "Numeric EDA",
    "text": "Numeric EDA\nWe’ll use the math table, the Portuguese table, then both filtered.\n\npor_tbl |&gt;  \n  summarise(across(c(\"absences\", \"age\", \"G3\"), list(\"mean\" = mean, \"sd\" = sd), .names = \"{.fn}_{.col}\"))\n\n  mean_absences sd_absences mean_age   sd_age  mean_G3    sd_G3\n1      3.659476    4.640759 16.74422 1.218138 11.90601 3.230656\n\npor_tbl |&gt; \n  filter(nursery == \"yes\") |&gt;  \n  summarise(across(c(\"absences\", \"age\", \"G3\"), list(\"mean\" = mean, \"sd\" = sd), .names = \"{.fn}_{.col}\"))\n\n  mean_absences sd_absences mean_age   sd_age  mean_G3    sd_G3\n1      3.566219    4.631407 16.73129 1.225043 11.95202 3.284521\n\n\nWe can see the standard deviation of G3 among Portuguese students who attended nursery school is 3.28.\n\nmat_tbl |&gt; \n  group_by(nursery) |&gt; \n  summarise(across(c(\"absences\", \"age\", \"G3\"), list(\"mean\" = mean, \"sd\" = sd), .names = \"{.fn}_{.col}\"))\n\n# A tibble: 2 × 7\n  nursery mean_absences sd_absences mean_age sd_age mean_G3 sd_G3\n  &lt;chr&gt;           &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 no               5.41        9.53     16.9   1.45    9.95  4.56\n2 yes              5.79        7.58     16.6   1.22   10.5   4.59\n\nmat_tbl |&gt; \n  group_by(nursery, reason) |&gt; \n  summarise(across(c(\"absences\", \"age\", \"G3\"), list(\"mean\" = mean, \"sd\" = sd), .names = \"{.fn}_{.col}\"))\n\n`summarise()` has grouped output by 'nursery'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 8\n# Groups:   nursery [2]\n  nursery reason     mean_absences sd_absences mean_age sd_age mean_G3 sd_G3\n  &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 no      course              2.79        3.53     17     1.50    9.59  5.10\n2 no      home                7.90       16.6      16.8   1.30    9.38  5.00\n3 no      other               6.38        5.66     17.8   2.05    9.5   2.88\n4 no      reputation          7           6.45     16.6   1.15   11.5   3.35\n5 yes     course              4.33        5.13     16.6   1.19    9.89  4.83\n6 yes     home                6.97        8.96     16.7   1.26   10.5   4.56\n7 yes     other               5.39        5.07     16.5   1.29   11.6   3.89\n8 yes     reputation          6.57        9.00     16.6   1.23   11.1   4.44\n\n\nThe mean absences among math students who attended nursery school is 5.79. When subset further among students who also chose the school for course options, that number drops to 4.33.\n\npor_tbl |&gt; \n  select(age, absences, G1, G2, G3) |&gt; \n  cor()\n\n                age    absences         G1         G2          G3\nage       1.0000000  0.14999819 -0.1743222 -0.1071191 -0.10650539\nabsences  0.1499982  1.00000000 -0.1471492 -0.1247449 -0.09137906\nG1       -0.1743222 -0.14714924  1.0000000  0.8649816  0.82638712\nG2       -0.1071191 -0.12474493  0.8649816  1.0000000  0.91854800\nG3       -0.1065054 -0.09137906  0.8263871  0.9185480  1.00000000\n\n\nWe see that G2 and G3 are very correlated with a value of .92.\n\nplot_1_1 &lt;- mat_tbl |&gt; ggplot(aes(x = G3))\nplot_1_1 + geom_histogram(aes(fill = nursery), binwidth = 1) + ggtitle(\"Histogram of G3\")\n\n\n\n\n\n\n\nplot_2_1 &lt;- mat_tbl |&gt; ggplot(aes(x = age))\nplot_2_1 + geom_histogram(aes(fill = nursery), binwidth = 1) + ggtitle(\"Histogram of Age\")\n\n\n\n\n\n\n\n\nThese give us counts in each bin of the values that fall there for G3 and age.\n\nplot_1_2 &lt;- mat_tbl |&gt; ggplot(aes(x = G3))\nplot_1_2 + geom_density(aes(fill = nursery, alpha = .5)) + ggtitle(\"Density of G3\")\n\n\n\n\n\n\n\nplot_2_2 &lt;- mat_tbl |&gt; ggplot(aes(x = age))\nplot_2_2 + geom_density(aes(fill = nursery, alpha = .5)) + ggtitle(\"Density of Age\")\n\n\n\n\n\n\n\n\nThis smooths out the histogram, which doesn’t work as well for discrete values like age.\n\nplot_1_3 &lt;- mat_tbl |&gt; ggplot(aes(x = G3))\nplot_1_3 + geom_boxplot(aes(fill = nursery)) + ggtitle(\"Boxplot of G3\")\n\n\n\n\n\n\n\nplot_2_3 &lt;- mat_tbl |&gt; ggplot(aes(x = age))\nplot_2_3 + geom_boxplot(aes(fill = nursery)) + ggtitle(\"Boxplot of Age\")\n\n\n\n\n\n\n\n\nThis shows us that the “heart” of each distribution is roughly similar in spread.\n\nplot_4_1 &lt;- por_tbl |&gt; ggplot(aes(x = G1, y = G3, color = activities))\nplot_4_1 + geom_point() + ggtitle(\"Plot of G3 vs G1\")\n\n\n\n\n\n\n\nplot_4_2 &lt;- por_tbl |&gt; ggplot(aes(x = absences, y = G3, color = activities))\nplot_4_2 + geom_point() + ggtitle(\"Plot of G3 vs absences\")\n\n\n\n\n\n\n\n\n\nplot_5_1 &lt;- por_tbl |&gt; ggplot(aes(x = G1, y = G3))\nplot_5_1 + geom_point() + ggtitle(\"Plots of G3 vs G1 given nursery\") + facet_wrap(~ nursery)\n\n\n\n\n\n\n\nplot_5_2 &lt;- por_tbl |&gt; ggplot(aes(x = absences, y = G3))\nplot_5_2 + geom_point() + ggtitle(\"Plots of G3 vs absences given nursery\") + facet_wrap(~ nursery)\n\n\n\n\n\n\n\n\n\nplot_5_1 &lt;- por_tbl |&gt; ggplot(aes(x = G1, y = G3))\nplot_5_1 + geom_point() + ggtitle(\"Plots of G3 vs G1 given nursery and guardian\") + facet_wrap(nursery ~ guardian)\n\n\n\n\n\n\n\nplot_5_2 &lt;- por_tbl |&gt; ggplot(aes(x = absences, y = G3))\nplot_5_2 + geom_point() + ggtitle(\"Plots of G3 vs absences given nursery and guardian\") + facet_wrap(nursery ~ guardian)\n\n\n\n\n\n\n\n\nThese plots let us pull out some trends. For example, in just about any scenario, we tend to see some increase of G3 with G1."
  }
]